// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId String @id @unique @default(cuid())
  clerkId  String   @unique
  email    String   @unique
  username String   @unique
  firstName String 
  lastName  String
  photo    String
  events   Event[]  @relation("UserEvents")
  orders   Order[]  @relation("UserOrders")
  canCreateEvents Boolean @default(false)
  isAdmin Boolean @default(false)
}

model Event {
  eventId      String     @unique @id @default(cuid())
  host         User      @relation("UserEvents", fields: [organizer], references: [clerkId])
  organizer    String
  title        String
  description  String?
  location     String?
  createdAt    DateTime   @default(now())
  imageUrl     String      @default("https://cdn.pixabay.com/photo/2016/10/23/17/06/calendar-1763587_1280.png")
  startDateTime DateTime   @default(now())
  endDateTime  DateTime   @default(now())
  price        String?
  isFree       Boolean     @default(false)
  url          String?
  categoryId   String      // Make this field required
  category     Category    @relation(fields: [categoryId], references: [id]) // Make this relation required
  orders       Order[]     @relation("EventOrders")
}

model Category {
  id      String   @id @unique @default(cuid())
  name    String   @unique
  events  Event[]
}

model Order {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  rzpId       String   @unique
  totalAmount String?
  eventId    String
  event      Event    @relation("EventOrders", fields: [eventId], references: [eventId])
  buyerId    String
  buyer      User     @relation("UserOrders", fields: [buyerId], references: [clerkId])
  status      String @default("pending")
}

